package com.github.warrentode.turtleblockacademy.datagen.loot.tables;

import biomesoplenty.api.block.BOPBlocks;
import com.github.warrentode.turtleblockacademy.loot.tables.KitLootTables;
import com.github.warrentode.turtleblockacademy.loot.tables.PackBuiltInLootTables;
import com.github.warrentode.turtleblockacademy.util.TBATags;
import net.mcreator.festivedelight.init.FestiveDelightModBlocks;
import net.mcreator.phantasm.init.PhantasmModBlocks;
import net.mcreator.unusualend.init.UnusualendModBlocks;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.entries.LootTableReference;
import net.minecraft.world.level.storage.loot.entries.TagEntry;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import net.minecraft.world.level.storage.loot.providers.number.UniformGenerator;
import org.jetbrains.annotations.NotNull;
import vectorwing.farmersdelight.common.registry.ModItems;

import java.util.function.BiConsumer;
import java.util.function.Consumer;

import static com.aetherteam.aether.block.AetherBlocks.*;
import static com.github.warrentode.turtleblockacademy.TurtleBlockAcademy.MODID;
import static com.refinedmods.refinedstorage.RSItems.QUARTZ_ENRICHED_IRON;
import static decor.delight.init.DecorationDelightModItems.*;
import static net.mcreator.phantasm.init.PhantasmModItems.*;
import static net.mcreator.unusualend.init.UnusualendModItems.*;
import static net.mehvahdjukaar.snowyspirit.reg.ModRegistry.*;
import static net.mehvahdjukaar.supplementaries.reg.ModRegistry.*;
import static samebutdifferent.ecologics.registry.ModBlocks.*;

public class KitLootTablesGen implements Consumer<BiConsumer<ResourceLocation, LootTable.Builder>> {
    @Override
    public void accept(@NotNull BiConsumer<ResourceLocation, LootTable.Builder> consumer) {
        consumer.accept(KitLootTables.KIT_RANDOM, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(27))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_LOGS))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_WOOL))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_CONCRETE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_GLASS))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_SAND))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_INGOTS))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_REDSTONE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_TERRACOTTA))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_GLAZED_TERRACOTTA))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_STONE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_SANDSTONE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_BLACKSTONE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_DEEPSLATE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_PRISMARINE))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_END_STONES))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_PURPUR_STONES))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_CREATURE_STONES))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_OBSIDIAN))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_CRYSTAL))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_BRICK_SET))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_QUARTZ))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_BASIC_SUPPLIES))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_DECOR))
                        .add(LootTableReference.lootTableReference(KitLootTables.KIT_CHRISTMAS_BLOCKS))
                )
        );

        consumer.accept(KitLootTables.KIT_CONCRETE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_concrete")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.BLACK_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLUE_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BROWN_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CYAN_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GREEN_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GRAY_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIME_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MAGENTA_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ORANGE_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PINK_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PURPLE_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_BLUE_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_GRAY_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.WHITE_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.YELLOW_CONCRETE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_GLASS, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_glass")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.TINTED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLACK_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLUE_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BROWN_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CYAN_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GREEN_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GRAY_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIME_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MAGENTA_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ORANGE_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PINK_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PURPLE_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_BLUE_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_GRAY_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.WHITE_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.YELLOW_STAINED_GLASS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(UnusualendModBlocks.CHISELED_GLASS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.CRYSTAL_FRAMED_GLASS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.VOID_CRYSTAL_FRAMED_GLASS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.GLASS_INFUSED)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.GLASS_REINFORCED)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.GLASS_GLOWING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.GLASS_SHIFTING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(QUICKSOIL_GLASS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_REDSTONE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_redstone")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Items.REDSTONE).setWeight(20)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Items.PISTON)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.STICKY_PISTON)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_TORCH).setWeight(2)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(16))))
                        .add(LootItem.lootTableItem(Items.HOPPER).setWeight(4)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.REPEATER).setWeight(2)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.COMPARATOR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.DAYLIGHT_DETECTOR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.REDSTONE_LAMP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(LootItem.lootTableItem(Items.OBSERVER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(8))))
                        .add(TagEntry.expandTag(TBATags.Items.GOLDEN_HOPPER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(4))))
                )
        );
        consumer.accept(KitLootTables.KIT_WOOL, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_wool")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.BLACK_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLUE_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BROWN_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CYAN_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GREEN_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GRAY_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIME_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MAGENTA_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ORANGE_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PINK_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PURPLE_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_BLUE_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_GRAY_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.WHITE_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.YELLOW_WOOL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_INGOTS, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_ingots")
                        .setRolls(ConstantValue.exactly(27))
                        .add(LootItem.lootTableItem(Items.COPPER_INGOT).setWeight(30)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT).setWeight(20)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(Items.GOLD_INGOT).setWeight(15)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(QUARTZ_ENRICHED_IRON.get()).setWeight(5))
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(1, 5)))
                        .add(LootItem.lootTableItem(Items.NETHERITE_INGOT).setWeight(1))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1)))
                        .add(TagEntry.expandTag(TBATags.Items.ENDONIAN_INGOT).setWeight(1))
                        .apply(SetItemCountFunction.setCount(UniformGenerator.between(1, 5)))
                )
        );
        consumer.accept(KitLootTables.KIT_TERRACOTTA, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_terracotta")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.BLACK_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLUE_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BROWN_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CYAN_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GREEN_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GRAY_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIME_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MAGENTA_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ORANGE_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PINK_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PURPLE_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_BLUE_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_GRAY_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.WHITE_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.YELLOW_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_GLAZED_TERRACOTTA, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_terracotta")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.BLACK_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLUE_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BROWN_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CYAN_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GREEN_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GRAY_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIME_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MAGENTA_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ORANGE_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PINK_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PURPLE_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.WHITE_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.YELLOW_GLAZED_TERRACOTTA)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_STONE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_stone")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.STONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MOSSY_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CRACKED_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.SMOOTH_STONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.COBBLESTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MOSSY_COBBLESTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(STONE_LAMP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(STONE_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.STONE_TILE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CARVED_STONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ANDESITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_ANDESITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ANDESITE_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_SANDSTONE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_sandstone")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CUT_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.SMOOTH_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CUT_RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.SMOOTH_RED_SANDSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.WHITE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.SMOOTH_WHITE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.CUT_WHITE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.CHISELED_WHITE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.ORANGE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.SMOOTH_ORANGE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.CUT_ORANGE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.CHISELED_ORANGE_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.BLACK_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.SMOOTH_BLACK_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.CUT_BLACK_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.CHISELED_BLACK_SANDSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_MISC_STONE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_misc_stone")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.GRANITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_GRANITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(GRANITE_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.DIORITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_DIORITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(DIORITE_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(SENTRY_STONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ANGELIC_STONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(LIGHT_ANGELIC_STONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(PILLAR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(PILLAR_TOP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(HELLFIRE_STONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(LIGHT_HELLFIRE_STONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(HOLYSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(MOSSY_HOLYSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(AEROGEL.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BLUE_AERCLOUD.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(COLD_AERCLOUD.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(GOLDEN_AERCLOUD.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(Blocks.DRIPSTONE_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CALCITE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.TUFF)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.BRIMSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(Blocks.BASALT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.SMOOTH_BASALT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_BASALT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(Blocks.OCHRE_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PEARLESCENT_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.VERDANT_FROGLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_BLACKSTONE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_blackstone")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.GILDED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_POLISHED_BLACKSTONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_BLACKSTONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BLACKSTONE_LAMP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.BLACKSTONE_TILE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_DEEPSLATE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_deepslate")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.COBBLED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.POLISHED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.DEEPSLATE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CRACKED_DEEPSLATE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.DEEPSLATE_TILES)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CRACKED_DEEPSLATE_TILES)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.REINFORCED_DEEPSLATE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(DEEPSLATE_LAMP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_PRISMARINE, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_sea_stones")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PRISMARINE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.DARK_PRISMARINE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.SEA_LANTERN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_END_STONES, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_end_stones")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.END_STONE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.END_STONE_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FADING_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(INFUSED_END_STONE_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ENDSTONE_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_ENDSTONE_BUILDER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_ENDSTONE_US.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_ENDSTONE_DRAGON.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_ENDSTONE_SCARED.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_ENDSTONE_WORK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_ENDSTONE_FRIENDSHIP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(END_STONE_LAMP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_PURPUR_STONES, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_purpur_stones")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(RAW_PURPUR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(RAW_PURPUR_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CRACKED_RAW_PURPUR_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_RAW_PURPUR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(RAW_PURPUR_PILLAR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(RAW_PURPUR_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(RAW_PURPUR_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(POLISHED_PURPUR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(POLISHED_PURPUR_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(POLISHED_PURPUR_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_POLISHED_PURPUR_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(POLISHED_PURPUR_TILES_LANTERN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(PURPUR_LAMP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_CREATURE_STONES, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_creature_stones")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(BOLOK_SCALE_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(POLISHED_GNEISS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(GNEISS_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(ENDERMITE_MOULT_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(ENDERMITE_MOULT_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(GLOOPSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(POLISHED_GLOOPSTONE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(GLOOPSTONE_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(SHINY_CRYSTAL_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SHINY_CRYSTAL_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SHINY_CRYSTAL_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_OBSIDIAN, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_obsidian")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.OBSIDIAN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CRYING_OBSIDIAN)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SMOOTH_OBSIDIAN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SMOOTH_OBSIDIAN_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SMOOTH_OBSIDIAN_PILLAR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHISELED_SMOOTH_OBSIDIAN.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SMOOTH_OBSIDIAN_LAMP.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_CRYSTAL, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_crystal")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(CRYSTAL_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CRYSTILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CRYSTILES_PILLAR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(VOID_CRYSTAL_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(VOID_CRYSTILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(VOID_CRYSTILES_PILLAR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(STELLIUM_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(STELLIUM_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_BRICK_SET, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_brick_set")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.LAPIS_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(TagEntry.expandTag(TBATags.Items.ASH_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.MUD_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.NETHER_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_NETHER_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.SHROOMLIGHT)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(HOLYSTONE_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_QUARTZ, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_quartz")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.SMOOTH_QUARTZ)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.CHISELED_QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_BLOCK)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_BRICKS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.QUARTZ_PILLAR)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))

                        .add(LootItem.lootTableItem(QUARTZ_AND_BLACKSTONE_TILES.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CHECKER_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_CHRISTMAS_BLOCKS, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_christmas_blocks")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.GINGERBREAD_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.GINGERBREAD_BLOCK_CREEPER.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.GINGERBREAD_BLOCK_DIAMOND.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.GINGERBREAD_BLOCK_DECORATIONS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.GINGERBREAD_BLOCK_SNOW.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.GINGERBREAD_PILLAR.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(FestiveDelightModBlocks.POLISHED_GINGERBREAD_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(GINGERBREAD_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(GINGERBREAD_FROSTED_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(CANDY_CANE_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_WINTER_BLOCKS, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_winter_blocks")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(ICE_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(SNOW_BRICKS.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.ICE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.PACKED_ICE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.BLUE_ICE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(THIN_ICE.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_LOGS, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_logs")
                        .setRolls(ConstantValue.exactly(27))
                        .add(LootTableReference.lootTableReference(PackBuiltInLootTables.LOG_SET))
                )
        );
        consumer.accept(KitLootTables.KIT_SAND, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_sand")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootItem.lootTableItem(Blocks.SAND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(Blocks.RED_SAND)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.BLACK_SAND.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.ORANGE_SAND.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.ROOTED_SAND.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                        .add(LootItem.lootTableItem(BOPBlocks.WHITE_SAND.get())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(64))))
                )
        );
        consumer.accept(KitLootTables.KIT_BASIC_SUPPLIES, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_basic_supplies")
                        .setRolls(ConstantValue.exactly(27))
                        .add(LootItem.lootTableItem(Blocks.COAL_BLOCK)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(FLINT_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(FEATHER_BLOCK.get())
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(Items.IRON_INGOT)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(ModItems.ROPE.get())
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(ROPE.get())
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                        .add(LootItem.lootTableItem(Items.TORCH)
                                .apply(SetItemCountFunction.setCount(UniformGenerator.between(5, 9))))
                )
        );
        consumer.accept(KitLootTables.KIT_DECOR, LootTable.lootTable()
                .withPool(LootPool.lootPool()
                        .name(MODID + ":kit_decor")
                        .setRolls(ConstantValue.exactly(1))
                        .add(LootTableReference.lootTableReference(PackBuiltInLootTables.DECO_ALL))
                )
        );
    }
}