package com.github.warrentode.turtleblockacademy.datagen.loot.tables;

import biomesoplenty.api.block.BOPBlocks;
import com.aetherteam.aether.block.AetherBlocks;
import com.faboslav.friendsandfoes.init.FriendsAndFoesItems;
import com.github.warrentode.turtleblockacademy.loot.tables.TradeLootTables;
import net.mcreator.phantasm.init.PhantasmModBlocks;
import net.mcreator.unusualend.init.UnusualendModBlocks;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.storage.loot.LootPool;
import net.minecraft.world.level.storage.loot.LootTable;
import net.minecraft.world.level.storage.loot.entries.LootItem;
import net.minecraft.world.level.storage.loot.functions.SetItemCountFunction;
import net.minecraft.world.level.storage.loot.predicates.LootItemRandomChanceCondition;
import net.minecraft.world.level.storage.loot.providers.number.ConstantValue;
import org.jetbrains.annotations.NotNull;
import samebutdifferent.ecologics.registry.ModBlocks;
import slimeknights.tconstruct.world.TinkerWorld;
import slimeknights.tconstruct.world.block.FoliageType;

import java.util.function.BiConsumer;
import java.util.function.Consumer;

import static com.aetherteam.aether.block.AetherBlocks.*;
import static com.github.warrentode.turtleblockacademy.datagen.loot.TBALootProviders.*;

public class TradeLootTablesGen implements Consumer<BiConsumer<ResourceLocation, LootTable.Builder>> {
    @Override
    public void accept(@NotNull BiConsumer<ResourceLocation, LootTable.Builder> consumer) {
        // trees
        consumer.accept(TradeLootTables.LOG_BUY_TRADE_TABLE, LootTable.lootTable()
                .withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1)).setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.SPRUCE_LOG).when(HAS_SPRUCE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.BIRCH_LOG).when(HAS_BIRCH.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.JUNGLE_LOG).when(HAS_JUNGLE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.ACACIA_LOG).when(HAS_ACACIA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.DARK_OAK_LOG).when(HAS_DARK_OAK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.MANGROVE_LOG).when(HAS_MANGROVE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_STEM).when(HAS_WARPED_FUNGUS.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.CRIMSON_STEM).when(HAS_CRIMSON_FUNGUS.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.FIR_LOG.get()).when(BOP_LOADED)
                                .when(HAS_FIR.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.REDWOOD_LOG.get()).when(BOP_LOADED)
                                .when(HAS_REDWOOD.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.CHERRY_LOG.get()).when(BOP_LOADED)
                                .when(HAS_CHERRY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAHOGANY_LOG.get()).when(BOP_LOADED)
                                .when(HAS_MAHOGANY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.JACARANDA_LOG.get()).when(BOP_LOADED)
                                .when(HAS_JACARANDA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.PALM_LOG.get()).when(BOP_LOADED)
                                .when(HAS_PALM.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILLOW_LOG.get()).when(BOP_LOADED)
                                .when(HAS_WILLOW.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.DEAD_LOG.get()).when(BOP_LOADED)
                                .when(HAS_DEAD.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAGIC_LOG.get()).when(BOP_LOADED)
                                .when(HAS_MAGIC.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.UMBRAN_LOG.get()).when(BOP_LOADED)
                                .when(HAS_UMBRAN.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.HELLBARK_LOG.get()).when(BOP_LOADED)
                                .when(HAS_HELLBARK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.COCONUT_LOG.get()).when(ECOLOGICS_LOADED)
                                .when(HAS_COCONUT.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.AZALEA_LOG.get()).when(ECOLOGICS_LOADED)
                                .when(HAS_AZALEA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.FLOWERING_AZALEA_LOG.get()).when(ECOLOGICS_LOADED)
                                .when(HAS_AZALEA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(UnusualendModBlocks.STRIPPED_CHORUS_NEST_PLANKS.get()).when(UNUSUALEND_LOADED)
                                .when(HAS_CHORUS_NEST.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(UnusualendModBlocks.CHORUS_NEST_PLANKS.get()).when(UNUSUALEND_LOADED)
                                .when(HAS_CHORUS_NEST.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.EBONY_WOOD.get()).when(PHANTASM_LOADED)
                                .when(HAS_EBONY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.PREAM_LOG.get()).when(PHANTASM_LOADED)
                                .when(HAS_PREAM.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(SKYROOT_LOG.get()).when(AETHER_LOADED)
                                .when(HAS_AETHER_SKYROOT.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(GOLDEN_OAK_LOG.get()).when(AETHER_LOADED)
                                .when(HAS_GOLDEN_OAK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.bloodshroom.getLog()).when(TCONSTRUCT_LOADED)
                                .when(HAS_BLOODSHROOM.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.enderbark.getLog()).when(TCONSTRUCT_LOADED)
                                .when(HAS_ENDERBARK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.greenheart.getLog()).when(TCONSTRUCT_LOADED)
                                .when(HAS_GREENHEART.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        // default offers
                        .add(LootItem.lootTableItem(TinkerWorld.skyroot.getLog()).when(TCONSTRUCT_LOADED)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.WALNUT_LOG.get()).when(ECOLOGICS_LOADED)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.OAK_LOG)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                )
        );
        consumer.accept(TradeLootTables.LOG_SELL_TRADE_TABLE, LootTable.lootTable()
                .withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1)).setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.SPRUCE_LOG).when(HAS_SPRUCE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.BIRCH_LOG).when(HAS_BIRCH.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.JUNGLE_LOG).when(HAS_JUNGLE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.ACACIA_LOG).when(HAS_ACACIA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.DARK_OAK_LOG).when(HAS_DARK_OAK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.MANGROVE_LOG).when(HAS_MANGROVE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_STEM).when(HAS_WARPED_FUNGUS.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.CRIMSON_STEM).when(HAS_CRIMSON_FUNGUS.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.FIR_LOG.get()).when(BOP_LOADED)
                                .when(HAS_FIR.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.REDWOOD_LOG.get()).when(BOP_LOADED)
                                .when(HAS_REDWOOD.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.CHERRY_LOG.get()).when(BOP_LOADED)
                                .when(HAS_CHERRY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAHOGANY_LOG.get()).when(BOP_LOADED)
                                .when(HAS_MAHOGANY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.JACARANDA_LOG.get()).when(BOP_LOADED)
                                .when(HAS_JACARANDA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.PALM_LOG.get()).when(BOP_LOADED)
                                .when(HAS_PALM.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILLOW_LOG.get()).when(BOP_LOADED)
                                .when(HAS_WILLOW.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.DEAD_LOG.get()).when(BOP_LOADED)
                                .when(HAS_DEAD.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAGIC_LOG.get()).when(BOP_LOADED)
                                .when(HAS_MAGIC.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.UMBRAN_LOG.get()).when(BOP_LOADED)
                                .when(HAS_UMBRAN.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.HELLBARK_LOG.get()).when(BOP_LOADED)
                                .when(HAS_HELLBARK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.COCONUT_LOG.get()).when(ECOLOGICS_LOADED)
                                .when(HAS_COCONUT.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.AZALEA_LOG.get()).when(ECOLOGICS_LOADED)
                                .when(HAS_AZALEA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.FLOWERING_AZALEA_LOG.get()).when(ECOLOGICS_LOADED)
                                .when(HAS_AZALEA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(UnusualendModBlocks.STRIPPED_CHORUS_NEST_PLANKS.get()).when(UNUSUALEND_LOADED)
                                .when(HAS_CHORUS_NEST.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(UnusualendModBlocks.CHORUS_NEST_PLANKS.get()).when(UNUSUALEND_LOADED)
                                .when(HAS_CHORUS_NEST.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.EBONY_WOOD.get()).when(PHANTASM_LOADED)
                                .when(HAS_EBONY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.PREAM_LOG.get()).when(PHANTASM_LOADED)
                                .when(HAS_PREAM.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(SKYROOT_LOG.get()).when(AETHER_LOADED)
                                .when(HAS_AETHER_SKYROOT.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(GOLDEN_OAK_LOG.get()).when(AETHER_LOADED)
                                .when(HAS_GOLDEN_OAK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.bloodshroom.getLog()).when(TCONSTRUCT_LOADED)
                                .when(HAS_BLOODSHROOM.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.enderbark.getLog()).when(TCONSTRUCT_LOADED)
                                .when(HAS_ENDERBARK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.greenheart.getLog()).when(TCONSTRUCT_LOADED)
                                .when(HAS_GREENHEART.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        // default offers
                        .add(LootItem.lootTableItem(TinkerWorld.skyroot.getLog()).when(TCONSTRUCT_LOADED)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.WALNUT_LOG.get()).when(ECOLOGICS_LOADED)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.OAK_LOG)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                )
        );

        // saplings
        consumer.accept(TradeLootTables.SAPLING_BUY_TRADE_TABLE, LootTable.lootTable()
                .withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1)).setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.SPRUCE_SAPLING).when(HAS_SPRUCE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.BIRCH_SAPLING).when(HAS_BIRCH.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.JUNGLE_SAPLING).when(HAS_JUNGLE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.ACACIA_SAPLING).when(HAS_ACACIA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.DARK_OAK_SAPLING).when(HAS_DARK_OAK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.MANGROVE_PROPAGULE).when(HAS_MANGROVE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_FUNGUS).when(HAS_WARPED_FUNGUS.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.CRIMSON_FUNGUS).when(HAS_CRIMSON_FUNGUS.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.FIR_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_FIR.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.REDWOOD_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_REDWOOD.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.WHITE_CHERRY_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_CHERRY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.PINK_CHERRY_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_CHERRY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAHOGANY_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_MAHOGANY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.JACARANDA_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_JACARANDA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.PALM_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_PALM.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILLOW_SAPLING.get()).when(HAS_WILLOW.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.DEAD_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_DEAD.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAGIC_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_MAGIC.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.UMBRAN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_UMBRAN.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.HELLBARK_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_HELLBARK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.COCONUT_SEEDLING.get()).when(HAS_COCONUT.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.AZALEA).when(HAS_AZALEA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.FLOWERING_AZALEA).when(HAS_AZALEA.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.PUTAC_SHROOM.get()).when(HAS_EBONY.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.PREAM_SAPLING.get()).when(HAS_PREAM.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(SKYROOT_SAPLING.get()).when(AETHER_LOADED)
                                .when(HAS_AETHER_SKYROOT.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(GOLDEN_OAK_SAPLING.get()).when(AETHER_LOADED)
                                .when(HAS_GOLDEN_OAK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.BLOOD)).when(TCONSTRUCT_LOADED)
                                .when(HAS_BLOODSHROOM.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.ENDER)).when(TCONSTRUCT_LOADED)
                                .when(HAS_ENDERBARK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.EARTH)).when(TCONSTRUCT_LOADED)
                                .when(HAS_GREENHEART.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.FLOWERING_OAK_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_FLOWERING_OAK.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.RAINBOW_BIRCH_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_RAINBOW_BIRCH.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAPLE_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_MAPLE.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.ORIGIN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_ORIGIN.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.YELLOW_AUTUMN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_YELLOW_AUTUMN.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(BOPBlocks.ORANGE_AUTUMN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_ORANGE_AUTUMN.or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        // default offers
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.SKY)).when(TCONSTRUCT_LOADED)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(ModBlocks.WALNUT_SAPLING.get()).when(ECOLOGICS_LOADED)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                        .add(LootItem.lootTableItem(Blocks.OAK_SAPLING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(6))))
                )
        );
        consumer.accept(TradeLootTables.SAPLING_SELL_TRADE_TABLE, LootTable.lootTable()
                .withPool(LootPool.lootPool().setRolls(ConstantValue.exactly(1)).setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Blocks.SPRUCE_SAPLING).when(HAS_SPRUCE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.BIRCH_SAPLING).when(HAS_BIRCH.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.JUNGLE_SAPLING).when(HAS_JUNGLE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.ACACIA_SAPLING).when(HAS_ACACIA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.DARK_OAK_SAPLING).when(HAS_DARK_OAK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.MANGROVE_PROPAGULE).when(HAS_MANGROVE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.WARPED_FUNGUS).when(HAS_WARPED_FUNGUS.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.CRIMSON_FUNGUS).when(HAS_CRIMSON_FUNGUS.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.FIR_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_FIR.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.REDWOOD_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_REDWOOD.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.WHITE_CHERRY_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_CHERRY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.PINK_CHERRY_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_CHERRY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAHOGANY_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_MAHOGANY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.JACARANDA_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_JACARANDA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.PALM_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_PALM.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILLOW_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_WILLOW.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.DEAD_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_DEAD.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAGIC_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_MAGIC.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.UMBRAN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_UMBRAN.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.HELLBARK_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_HELLBARK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModBlocks.COCONUT_SEEDLING.get()).when(HAS_COCONUT.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.AZALEA).when(HAS_AZALEA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.FLOWERING_AZALEA).when(HAS_AZALEA.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.PUTAC_SHROOM.get()).when(HAS_EBONY.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(PhantasmModBlocks.PREAM_SAPLING.get()).when(HAS_PREAM.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(SKYROOT_SAPLING.get()).when(AETHER_LOADED)
                                .when(HAS_AETHER_SKYROOT.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(GOLDEN_OAK_SAPLING.get()).when(AETHER_LOADED)
                                .when(HAS_GOLDEN_OAK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.BLOOD)).when(TCONSTRUCT_LOADED)
                                .when(HAS_BLOODSHROOM.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.ENDER)).when(TCONSTRUCT_LOADED)
                                .when(HAS_ENDERBARK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.EARTH)).when(TCONSTRUCT_LOADED)
                                .when(HAS_GREENHEART.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.FLOWERING_OAK_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_FLOWERING_OAK.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.RAINBOW_BIRCH_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_RAINBOW_BIRCH.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.MAPLE_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_MAPLE.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.ORIGIN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_ORIGIN.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.YELLOW_AUTUMN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_YELLOW_AUTUMN.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.ORANGE_AUTUMN_SAPLING.get()).when(BOP_LOADED)
                                .when(HAS_ORANGE_AUTUMN.invert().or(IN_DUNGEON).or(IN_MINING))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        // default offers
                        .add(LootItem.lootTableItem(TinkerWorld.slimeSapling.get(FoliageType.SKY)).when(TCONSTRUCT_LOADED)
                                .when(LootItemRandomChanceCondition.randomChance(0.1F))
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(ModBlocks.WALNUT_SAPLING.get()).when(ECOLOGICS_LOADED)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Blocks.OAK_SAPLING)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                )
        );

        // flowers
        consumer.accept(TradeLootTables.FLOWER_SELL_TRADE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SUNFLOWER).when(HAS_SUNFLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PEONY).when(HAS_PEONY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ROSE_BUSH).when(HAS_ROSE_BUSH.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.LILAC).when(HAS_LILAC.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.BUTTERCUP.get()).when(HAS_BUTTERCUP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.LILY_OF_THE_VALLEY).when(HAS_LILY_OF_THE_VALLEY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.CORNFLOWER).when(HAS_CORNFLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.OXEYE_DAISY).when(HAS_OXEYE_DAISY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.PINK_TULIP).when(HAS_PINK_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.WHITE_TULIP).when(HAS_WHITE_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ORANGE_TULIP).when(HAS_ORANGE_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.RED_TULIP).when(HAS_RED_TULIP.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.AZURE_BLUET).when(HAS_AZURE_BLUET.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.ALLIUM).when(HAS_ALLIUM.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.BLUE_ORCHID).when(HAS_BLUE_ORCHID.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(AetherBlocks.PURPLE_FLOWER.get()).when(AETHER_LOADED)
                                .when(HAS_PURPLE_FLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(AetherBlocks.WHITE_FLOWER.get()).when(AETHER_LOADED)
                                .when(HAS_WHITE_FLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.GOLDENROD.get()).when(BOP_LOADED)
                                .when(HAS_GOLDENROD.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILDFLOWER.get()).when(BOP_LOADED)
                                .when(HAS_WILDFLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.CATTAIL.get()).when(BOP_LOADED)
                                .when(HAS_CATTAIL.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILTED_LILY.get()).when(BOP_LOADED)
                                .when(HAS_WILTED_LILY.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.VIOLET.get()).when(BOP_LOADED)
                                .when(HAS_VIOLET.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.ROSE.get()).when(BOP_LOADED)
                                .when(HAS_ROSE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.WITHER_ROSE).when(HAS_WITHER_ROSE.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.GLOWFLOWER.get()).when(BOP_LOADED)
                                .when(HAS_GLOWFLOWER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.LAVENDER.get()).when(BOP_LOADED)
                                .when(HAS_LAVENDER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.TALL_LAVENDER.get()).when(BOP_LOADED)
                                .when(HAS_LAVENDER.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.ICY_IRIS.get()).when(BOP_LOADED)
                                .when(HAS_ICY_IRIS.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(BOPBlocks.BURNING_BLOSSOM.get()).when(BOP_LOADED)
                                .when(HAS_BURNING_BLOSSOM.invert())
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        // default offers
                        .add(LootItem.lootTableItem(Items.POPPY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                        .add(LootItem.lootTableItem(Items.DANDELION)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(1))))
                ));
        consumer.accept(TradeLootTables.FLOWER_BUY_TRADE_TABLE,
                LootTable.lootTable().withPool(LootPool.lootPool()
                        .setRolls(ConstantValue.exactly(1))
                        .setBonusRolls(ConstantValue.exactly(0))
                        .add(LootItem.lootTableItem(Items.SUNFLOWER).when(HAS_SUNFLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PEONY).when(HAS_PEONY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ROSE_BUSH).when(HAS_ROSE_BUSH)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LILAC).when(HAS_LILAC)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(FriendsAndFoesItems.BUTTERCUP.get()).when(HAS_BUTTERCUP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.LILY_OF_THE_VALLEY).when(HAS_LILY_OF_THE_VALLEY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.CORNFLOWER).when(HAS_CORNFLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.OXEYE_DAISY).when(HAS_OXEYE_DAISY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.PINK_TULIP).when(HAS_PINK_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.WHITE_TULIP).when(HAS_WHITE_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ORANGE_TULIP).when(HAS_ORANGE_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.RED_TULIP).when(HAS_RED_TULIP)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.AZURE_BLUET).when(HAS_AZURE_BLUET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.ALLIUM).when(HAS_ALLIUM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.BLUE_ORCHID).when(HAS_BLUE_ORCHID)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(AetherBlocks.PURPLE_FLOWER.get()).when(AETHER_LOADED)
                                .when(HAS_PURPLE_FLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(AetherBlocks.WHITE_FLOWER.get()).when(AETHER_LOADED)
                                .when(HAS_WHITE_FLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.GOLDENROD.get()).when(BOP_LOADED)
                                .when(HAS_GOLDENROD)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILDFLOWER.get()).when(BOP_LOADED)
                                .when(HAS_WILDFLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.CATTAIL.get()).when(BOP_LOADED)
                                .when(HAS_CATTAIL)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.WILTED_LILY.get()).when(BOP_LOADED)
                                .when(HAS_WILTED_LILY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.VIOLET.get()).when(BOP_LOADED)
                                .when(HAS_VIOLET)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.ROSE.get()).when(BOP_LOADED)
                                .when(HAS_ROSE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.WITHER_ROSE).when(HAS_WITHER_ROSE)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.GLOWFLOWER.get()).when(BOP_LOADED)
                                .when(HAS_GLOWFLOWER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.LAVENDER.get()).when(BOP_LOADED)
                                .when(HAS_LAVENDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.TALL_LAVENDER.get()).when(BOP_LOADED)
                                .when(HAS_LAVENDER)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.ICY_IRIS.get()).when(BOP_LOADED)
                                .when(HAS_ICY_IRIS)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(BOPBlocks.BURNING_BLOSSOM.get()).when(BOP_LOADED)
                                .when(HAS_BURNING_BLOSSOM)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        // default offers
                        .add(LootItem.lootTableItem(Items.POPPY)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                        .add(LootItem.lootTableItem(Items.DANDELION)
                                .apply(SetItemCountFunction.setCount(ConstantValue.exactly(12))))
                ));
    }
}