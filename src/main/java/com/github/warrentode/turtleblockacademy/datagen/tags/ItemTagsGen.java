package com.github.warrentode.turtleblockacademy.datagen.tags;

import biomesoplenty.api.block.BOPBlocks;
import biomesoplenty.api.item.BOPItems;
import cn.foggyhillside.endsdelight.registry.ItemRegistry;
import com.aetherteam.aether.item.AetherItems;
import com.github.warrentode.turtleblockacademy.items.TBAItems;
import com.github.warrentode.turtleblockacademy.util.TBATags;
import com.hakimen.kawaiidishes.registry.ItemRegister;
import com.mcwdoors.kikoz.init.ItemInit;
import com.sammy.minersdelight.setup.MDItems;
import com.scouter.oceansdelight.items.ODItems;
import net.brnbrd.delightful.common.item.DelightfulItems;
import net.mcreator.festivedelight.init.FestiveDelightModItems;
import net.mcreator.justoutdoorstuffs.init.JustoutdoorstuffsModItems;
import net.mcreator.moadecorart.init.MoaDecorArtModItems;
import net.mcreator.moadecorbath.init.MoaDecorBathModItems;
import net.mcreator.moadecorcookery.init.MoaDecorCookeryModItems;
import net.mcreator.moadecorgarden.init.MoaDecorGardenModItems;
import net.mcreator.moadecorholidays.init.MoaDecorHolidaysModItems;
import net.mcreator.moadecorscience.init.MoaDecorScienceModItems;
import net.mcreator.moadecortoys.init.MoaDecorToysModItems;
import net.mcreator.phantasm.init.PhantasmModItems;
import net.mcreator.unusualend.init.UnusualendModItems;
import net.mehvahdjukaar.supplementaries.reg.ModRegistry;
import net.minecraft.data.DataGenerator;
import net.minecraft.data.tags.BlockTagsProvider;
import net.minecraft.data.tags.ItemTagsProvider;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.tags.ItemTags;
import net.minecraft.world.item.Items;
import net.minecraft.world.level.block.Blocks;
import net.minecraftforge.common.Tags;
import net.minecraftforge.common.data.ExistingFileHelper;
import org.jetbrains.annotations.Nullable;
import slimeknights.tconstruct.fluids.TinkerFluids;
import umpaz.farmersrespite.common.registry.FRItems;
import umpaz.nethersdelight.common.registry.NDItems;
import vectorwing.farmersdelight.common.registry.ModItems;
import vectorwing.farmersdelight.common.tag.ForgeTags;

import java.util.Objects;

import static alabaster.crabbersdelight.common.registry.ModItems.*;
import static com.github.warrentode.turtleblockacademy.items.TBAItems.STUDENT_CARD;
import static com.sammy.minersdelight.setup.MDItems.CAVE_CARROT;
import static net.p3pp3rf1y.sophisticatedbackpacks.init.ModItems.*;
import static vectorwing.farmersdelight.common.registry.ModItems.*;

public class ItemTagsGen extends ItemTagsProvider {
    public ItemTagsGen(DataGenerator generator, BlockTagsProvider blockTagsProvider, String modid, @Nullable ExistingFileHelper helper) {
        super(generator, blockTagsProvider, modid, helper);
    }

    @Override
    protected void addTags() {
        this.registerPackTags();
    }

    private void registerPackTags() {
        tag(TBATags.Items.MATCHING_ITEM_REMAINDERS)
                .addTag(TBATags.Items.EGG_STAMPS)
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse(
                        "todevillagers:glassblower_tools")))
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse(
                        "todecoins:currency_stamps")));
        tag(TBATags.Items.BOTTLE_REMAINDERS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.venomBottle.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.magmaBottle.asItem().toString())))
                .add(Items.EXPERIENCE_BOTTLE)
                .add(Items.LINGERING_POTION)
                .add(Items.SPLASH_POTION)
                .add(Items.POTION);
        tag(TBATags.Items.BOWL_REMAINDERS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.meatSoupBowl.asItem().toString())))
                .add(Items.BEETROOT_SOUP)
                .add(Items.RABBIT_STEW)
                .add(Items.MUSHROOM_STEW)
                .add(Items.SUSPICIOUS_STEW);
        tag(TBATags.Items.BUCKET_REMAINDERS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.beetrootSoup.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.earthSlime.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.skySlime.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.enderSlime.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.magma.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.honey.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.mushroomStew.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.rabbitStew.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.potion.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.blazingBlood.asItem().toString())))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        TinkerFluids.liquidSoul.asItem().toString())))
                .add(Items.TROPICAL_FISH_BUCKET)
                .add(Items.SALMON_BUCKET)
                .add(Items.PUFFERFISH_BUCKET)
                .add(Items.COD_BUCKET)
                .add(Items.AXOLOTL_BUCKET)
                .add(Items.POWDER_SNOW_BUCKET)
                .add(Items.WATER_BUCKET);
        tag(TBATags.Items.EGG_STAMPS)
                .add(TBAItems.EGG_STAMP_FLOWER.get())
                .add(TBAItems.EGG_STAMP_CREEPER.get());
        tag(TBATags.Items.SLIME_BALLS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        "tconstruct:sky_slime_ball")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        "tconstruct:ichor_slime_ball")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        "tconstruct:ender_slime_ball")))
                .addOptional(AetherItems.SWET_BALL.getId())
                .add(Items.SLIME_BALL);
        tag(TBATags.Items.BOILED_EGGS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse(
                        "eggdelight:boiled_egg")))
                .add(TBAItems.BOILED_EGG.get());
        tag(TBATags.Items.BASKET_ITEMS)
                .addTag(ItemTags.FLOWERS)
                .addTag(TBATags.Items.BREAD)
                .addTag(TBATags.Items.SWEETS)
                .addTag(TBATags.Items.EASTER_EGGS);
        tag(TBATags.Items.EASTER_EGGS)
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_BLACK_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_RED_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_GREEN_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_BROWN_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_BLUE_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_CYAN_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_GRAY_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_PINK_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_LIME_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_FLOWER_WHITE.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_BLACK.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_RED.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_GREEN.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_BROWN.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_BLUE.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_CYAN.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_GRAY.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_PINK.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_LIME.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_WHITE_FLOWER_WHITE.get())

                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_BLACK_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_RED_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_GREEN_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_BROWN_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_BLUE_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_PURPLE_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_CYAN_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_GRAY_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_PINK_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_LIME_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_YELLOW_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_ORANGE_CREEPER_WHITE.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_BLACK.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_RED.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_GREEN.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_BROWN.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_BLUE.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_PURPLE.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_CYAN.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_GRAY.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_PINK.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_LIME.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_YELLOW.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_ORANGE.get())
                .add(TBAItems.COLORED_EGG_WHITE_CREEPER_WHITE.get())

                .add(TBAItems.COLORED_EGG_BLACK.get())
                .add(TBAItems.COLORED_EGG_RED.get())
                .add(TBAItems.COLORED_EGG_GREEN.get())
                .add(TBAItems.COLORED_EGG_BROWN.get())
                .add(TBAItems.COLORED_EGG_BLUE.get())
                .add(TBAItems.COLORED_EGG_PURPLE.get())
                .add(TBAItems.COLORED_EGG_CYAN.get())
                .add(TBAItems.COLORED_EGG_LIGHT_GRAY.get())
                .add(TBAItems.COLORED_EGG_GRAY.get())
                .add(TBAItems.COLORED_EGG_PINK.get())
                .add(TBAItems.COLORED_EGG_LIME.get())
                .add(TBAItems.COLORED_EGG_YELLOW.get())
                .add(TBAItems.COLORED_EGG_LIGHT_BLUE.get())
                .add(TBAItems.COLORED_EGG_MAGENTA.get())
                .add(TBAItems.COLORED_EGG_ORANGE.get())
                .add(TBAItems.COLORED_EGG_WHITE.get());
        tag(TBATags.Items.SEEDS)
                .add(TBAItems.DILL_SEEDS.get())
                .add(TBAItems.CUCUMBER_SEEDS.get())
                .add(TBAItems.CLOVE_SEEDS.get());
        tag(TBATags.Items.DYES)
                .add(
                        Items.WHITE_DYE,
                        Items.ORANGE_DYE,
                        Items.MAGENTA_DYE,
                        Items.LIGHT_BLUE_DYE,
                        Items.YELLOW_DYE,
                        Items.LIME_DYE,
                        Items.PINK_DYE,
                        Items.GRAY_DYE,
                        Items.LIGHT_GRAY_DYE,
                        Items.CYAN_DYE,
                        Items.PURPLE_DYE,
                        Items.BLUE_DYE,
                        Items.BROWN_DYE,
                        Items.GREEN_DYE,
                        Items.RED_DYE
                );
        tag(TBATags.Items.CHALK)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chalk:yellow_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chalk:pink_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:purple_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:light_gray_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:light_blue_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:magenta_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:lime_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:black_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:gray_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:blue_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:red_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:orange_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:cyan_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:white_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:brown_chalk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse( "chalk:green_chalk")));
        tag(TBATags.Items.WHEAT_FLOUR)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("create:wheat_flour")))
                .add(TBAItems.WHEAT_FLOUR.get());
        tag(TBATags.Items.FLOUR)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("create:cinder_flour")))
                .addTag(TBATags.Items.WHEAT_FLOUR);
        tag(TBATags.Items.APPLE_CIDERS)
                .addOptional(FRItems.STRONG_APPLE_CIDER.getId())
                .addOptional(FRItems.LONG_APPLE_CIDER.getId())
                .addOptional(APPLE_CIDER.getId());
        tag(TBATags.Items.FERMENTING_CONTAINERS)
                .add(Items.BOWL)
                .add(Items.GLASS_BOTTLE);
        tag(TBATags.Items.FERMENTING_POT_COVERS)
                .addTag(TBATags.Items.PICKLING_STONES)
                .addTag(TBATags.Items.FABRIC_COVERS);
        tag(TBATags.Items.PICKLING_STONES)
                .addTag(ItemTags.SLABS);
        tag(TBATags.Items.FABRIC_COVERS)
                .addTag(ItemTags.WOOL_CARPETS);
        tag(TBATags.Items.APPLECRATES)
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:skyroot_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:tofu_stem_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:green_cactus_extra_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:cactus_extra_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:chorus_nest_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:ebony_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:pream_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:flowering_azalea_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:azalea_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:walnut_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:coconut_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:willow_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:redwood_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:palm_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:mahogany_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:magic_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:jacaranda_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:hellbark_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:fir_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:dead_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:cherry_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:enderbark_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:bloodshroom_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:greenheart_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:tc_skyroot_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:warped_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates_compat:mangrove_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:warped_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:spruce_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:oak_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:jungle_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:dark_oak_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:crimson_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:birch_crate")))
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("applecrates:acacia_crate")));
        tag(TBATags.Items.CURIO)
                .addTag(TBATags.Items.SUPPLEMENTARIES_KEY);
        tag(TBATags.Items.SUPPLEMENTARIES_KEY)
                .add(STUDENT_CARD.get());
        tag(TBATags.Items.CAGERIUM_ITEMS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:burning_upgrade")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:binding_wood_plate")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:ominous_skull")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:skeleton_key")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:binding_gemstone")));
        tag(TBATags.Items.CAGERIUM_BLOCKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:cage")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:terrarium")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:plate")));
        tag(TBATags.Items.ADVANCEMENT_FRAME_ITEM)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("advancementframes:advancement_frame")));
        tag(TBATags.Items.GOLDEN_HOPPER)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("goldenhopper:golden_hopper")));
        tag(TBATags.Items.STICKS)
                .addOptional(AetherItems.SKYROOT_STICK.getId())
                .add(Items.STICK);
        tag(TBATags.Items.BRICK)
                .add(ModRegistry.ASH_BRICK_ITEM.get())
                .add(Items.NETHER_BRICK)
                .add(Items.BRICK);
        tag(TBATags.Items.WATER_BUCKETS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("miners_delight:water_cup")))
                .addOptional(AetherItems.SKYROOT_WATER_BUCKET.getId())
                .add(Items.WATER_BUCKET);
        tag(TBATags.Items.BLOODSHROOM_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:bloodshroom_log")));
        tag(TBATags.Items.BLOODSHROOM_STRIPPED_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:stripped_bloodshroom_log")));
        tag(TBATags.Items.BLOODSHROOM_PLANKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:bloodshroom_planks")));
        tag(TBATags.Items.BLOODSHROOM_SLAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:bloodshroom_planks_slab")));
        tag(TBATags.Items.ENDERBARK_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:enderbark_log")));
        tag(TBATags.Items.ENDERBARK_STRIPPED_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:stripped_enderbark_log")));
        tag(TBATags.Items.ENDERBARK_PLANKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:enderbark_planks")));
        tag(TBATags.Items.ENDERBARK_SLAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:enderbark_planks_slab")));
        tag(TBATags.Items.GREENHEART_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:greenheart_log")));
        tag(TBATags.Items.GREENHEART_STRIPPED_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:stripped_greenheart_log")));
        tag(TBATags.Items.GREENHEART_PLANKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:greenheart_planks")));
        tag(TBATags.Items.GREENHEART_SLAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:greenheart_planks_slab")));
        tag(TBATags.Items.TINKER_SKYROOT_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:skyroot_log")));
        tag(TBATags.Items.TINKER_SKYROOT_STRIPPED_LOG)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:stripped_skyroot_log")));
        tag(TBATags.Items.TINKER_SKYROOT_PLANKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:skyroot_planks")));
        tag(TBATags.Items.TINKER_SKYROOT_SLAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:skyroot_planks_slab")));
        tag(Tags.Items.LEATHER)
                .add(Items.LEATHER)
                .add(Items.RABBIT_HIDE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("nethersdelight:hoglin_hide")));
        tag(TBATags.Items.SAND)
                .addOptional(BOPBlocks.WHITE_SAND.getId())
                .addOptional(BOPBlocks.ROOTED_SAND.getId())
                .addOptional(BOPBlocks.ORANGE_SAND.getId())
                .addOptional(BOPBlocks.BLACK_SAND.getId())
                .add(Blocks.SAND.asItem())
                .add(Blocks.RED_SAND.asItem());
        tag(TBATags.Items.STRAW_FIBERS)
                .add(Items.WHEAT)
                .addOptional(BOPBlocks.BARLEY.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:rice_panicle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:flax")))
                .addOptional(ModItems.STRAW.getId());
        tag(TBATags.Items.FLOWER_BOX_PLANTABLE);
        tag(TBATags.Items.PIGLIN_BARTER_ITEMS);
        tag(TBATags.Items.BUNDLES)
                .add(Items.BUNDLE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("bagofholding:leather_bag_of_holding")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("bagofholding:iron_bag_of_holding")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("bagofholding:gold_bag_of_holding")));
        tag(TBATags.Items.WALLETS)
                .addTag(TBATags.Items.BUNDLES);
        tag(TBATags.Items.SUGAR)
                .add(Items.SUGAR)
                .add(Items.HONEY_BOTTLE);
        tag(TBATags.Items.MILK)
                .addOptional(ModItems.MILK_BOTTLE.getId())
                .add(Items.MILK_BUCKET)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:condensed_milk")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("aether:skyroot_milk_bucket")));
        tag(TBATags.Items.STONE_LAMPS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:stone_lamp")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:blackstone_lamp")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:deepslate_lamp")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:end_stone_lamp")));
        tag(TBATags.Items.NEEDLES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:wood_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:stone_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:bone_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:gold_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:iron_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:iron_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:diamond_sewing_needle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("sewingkit:netherite_sewing_needle")));
        tag(TBATags.Items.MAILBOXES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:oak_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:spruce_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:birch_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:jungle_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:acacia_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:dark_oak_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:crimson_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:warped_mail_box")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mighty_mail:mangrove_mail_box")));
        tag(TBATags.Items.TRELLIS)
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.OAK_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.SPRUCE_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.BIRCH_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.JUNGLE_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.ACACIA_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.DARK_OAK_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.CRIMSON_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.WARPED_TRELLIS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.MANGROVE_TRELLIS_ITEM.getId());
        tag(TBATags.Items.WAYSTONES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("waystones:waystone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("waystones:mossy_waystone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("waystones:sandy_waystone")));
        tag(TBATags.Items.PICTURE_FRAMES)
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.OAK_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.SPRUCE_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.BIRCH_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.JUNGLE_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.ACACIA_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.DARK_OAK_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.CRIMSON_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.WARPED_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.MANGROVE_PICTURE_FRAME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.QUARTZ_PICTURE_FRAME_ITEM.getId());
        tag(TBATags.Items.WALL_TORCHES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_magenta_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_pink_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_packed_ice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_diamond_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_gold_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_iron_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_glass")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_blackstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_red_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_end_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_end_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_smooth_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_mossy_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_mossy_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_warped_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_crimson_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_jungle_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_spruce_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_dark_oak_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_oak_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_birch_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_torch_acacia_planks")));
        tag(TBATags.Items.TALL_STANDING_TORCHES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_mossy_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_mossy_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_smooth_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_polished_andesite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_polished_diorite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_polished_granite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_cut_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_end_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_end_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_red_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_polished_blackstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_iron_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_gold_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_diamond_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_packed_ice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_pink_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_l_magenta_wool")));
        tag(TBATags.Items.STANDING_TORCHES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_mossy_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_mossy_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_smooth_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_polished_andesite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_polished_diorite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_polished_granite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_cut_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_end_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_end_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_red_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_polished_blackstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_iron_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_gold_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_diamond_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_packed_ice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_pink_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:standing_torch_s_magenta_wool")));
        tag(TBATags.Items.LARGE_FIRE_PITS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_mossy_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_mossy_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_smooth_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_polished_andesite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_polished_diorite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_polished_granite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_cut_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_end_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_end_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_red_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_polished_blackstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_iron_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_gold_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_diamond_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_packed_ice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_pink_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_l_magenta_wool")));
        tag(TBATags.Items.FIRE_PITS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_mossy_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_mossy_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_smooth_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_polished_andesite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_polished_diorite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_polished_granite")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_cut_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_end_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_end_stone_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_red_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_polished_blackstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_iron_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_gold_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_diamond_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_packed_ice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_pink_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:fire_pit_s_magenta_wool")));
        tag(TBATags.Items.CHIMES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chimes:bamboo_chimes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chimes:carved_bamboo_chimes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chimes:iron_chimes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chimes:copper_chimes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chimes:amethyst_chimes")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("chimes:glass_bells")));
        tag(TBATags.Items.CAMP_CHAIRS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:oak_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:spruce_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:birch_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:jungle_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:acacia_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:dark_oak_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:crimson_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:warped_camp_chair")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("campchair:mangrove_camp_chair")));
        tag(TBATags.Items.BLINDS)
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.OAK_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.SPRUCE_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.BIRCH_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.JUNGLE_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.ACACIA_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.DARK_OAK_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.CRIMSON_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.WARPED_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.MANGROVE_BLINDS_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.IRON_BLINDS_ITEM.getId());
        tag(TBATags.Items.BEEHIVES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:acacia_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:birch_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:crimson_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:dark_oak_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:jungle_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:mangrove_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:spruce_beehive")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("friendsandfoes:warped_beehive")))
                .add(Items.BEEHIVE);
        tag(TBATags.Items.LAMPS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_magenta_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_pink_wool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_packed_ice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_diamond_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_gold_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_iron_block")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_glass")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_blackstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_red_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_nether_bricks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_end_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_sandstone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_stone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_mossy_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_cobblestone")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_warped_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_crimson_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_jungle_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_spruce_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_dark_oak_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_oak_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_birch_planks")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("additional_lights:al_lamp_acacia_planks")));
        tag(TBATags.Items.CANDELABRA)
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_YELLOW_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_WHITE_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_RED_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_PURPLE_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_PINK_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_ORANGE_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_MAGENTA_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_LIME_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_GREEN_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_GRAY_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_CYAN_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_BROWN_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_BLUE_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_BLACK_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_LIGHT_GRAY_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_LIGHT_BLUE_ITEM.getId())
                .addOptional(com.github.Pandarix.beautify.core.init.ItemInit.LAMP_CANDLEABRA_ITEM.getId());
        tag(TBATags.Items.BLACKSTONE_TILE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:blackstone_tile")));
        tag(TBATags.Items.STONE_TILE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:stone_tile")));
        tag(TBATags.Items.LAPIS_BRICKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:lapis_bricks")));
        tag(TBATags.Items.ASH_BRICKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:ash_bricks")));
        tag(TBATags.Items.PATIO_ITEMS)
                .addOptional(JustoutdoorstuffsModItems.PATIO_BBQ_GRILL.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_CHECKERS_SET.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_TEA_SET.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_COFFEE_TABLE_GLASS.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_COFFEE_TABLE.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SIDE_TABLE.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_LOUNGE_CHAIR.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_BENCH.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SOFA_STOOL.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SOFA_CHAISE.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SOFA_CORNER.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SOFA_RIGHT.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SOFA_MID.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_SOFA_LEFT.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_ARMCHAIR.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_ROCKING_CHAIR.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_MODERN_PLANTER_WHITE.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_MODERN_PLANTER_BLACK.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_PLANTER.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_TABLE_WIDE.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_TABLE_LARGE.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_TABLE_SMALL.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_BENCH.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_STOOL.getId())
                .addOptional(JustoutdoorstuffsModItems.PATIO_IRON_CHAIR.getId());
        tag(TBATags.Items.GARDEN_ITEMS)
                .addOptional(JustoutdoorstuffsModItems.GARDEN_GNOME_3.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_GNOME_2.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_GNOME_1.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_FLAMINGO.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_BIRDBATH.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_BUCKET.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_PITCHFORK.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_SPADE.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_SHOVEL.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_RAKE.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_HOE.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_TOOLS.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_BAG_FERTILIZERS.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_STEP_STOOL.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_WATERING_CAN.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_HOSE.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_WHEELBARROW.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_LAWN_MOWER.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_PLANTER.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_TABLE_LARGE.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_TABLE_WIDE.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_TABLE_SMALL.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_BENCH.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_CHAIR.getId())
                .addOptional(JustoutdoorstuffsModItems.GARDEN_STOOL.getId());
        tag(TBATags.Items.SLEDS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("snowyspirit:sled_sand")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("snowyspirit:sled_snow")));
        tag(TBATags.Items.CAKE_SLICES)
                .addOptional(ModItems.SWEET_BERRY_CHEESECAKE_SLICE.getId())
                .addOptional(FRItems.COFFEE_CAKE_SLICE.getId())
                .addOptional(ItemRegister.honeyCheeseCakePiece.getId())
                .addOptional(ItemRegister.chocolateCheeseCakePiece.getId())
                .addOptional(ItemRegister.cheeseCakePiece.getId())
                .addOptional(ItemRegister.cakePiece.getId());
        tag(TBATags.Items.CAKES)
                .addOptional(ModItems.SWEET_BERRY_CHEESECAKE.getId())
                .addOptional(FRItems.COFFEE_CAKE.getId())
                .addOptional(ItemRegister.honeyCheeseCake.getId())
                .addOptional(ItemRegister.chocolateCheeseCake.getId())
                .addOptional(ItemRegister.cheeseCake.getId())
                .add(Items.CAKE);
        tag(TBATags.Items.TRICKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:rotten_apple")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("domesticationinnovation:sinister_carrot")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("hauntedharvest:grim_apple")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("hauntedharvest:rotten_apple")));
        tag(TBATags.Items.INGREDIENTS)
                .addTag(TBATags.Items.CUCUMBERS)
                .addTag(TBATags.Items.SALT_INGREDIENTS)
                .addTag(TBATags.Items.APPLE_INGREDIENTS)
                .addTag(TBATags.Items.STARCH_INGREDIENTS)
                .addTag(TBATags.Items.CARROT_INGREDIENTS)
                .addTag(TBATags.Items.CABBAGE_INGREDIENTS)
                .addTag(TBATags.Items.PUMPKIN_INGREDIENTS)
                .addTag(TBATags.Items.MELON_INGREDIENTS)
                .addTag(TBATags.Items.COCOA_INGREDIENTS)
                .addTag(TBATags.Items.CLOVER_INGREDIENTS)
                .addTag(TBATags.Items.ONION_INGREDIENTS)
                .addTag(TBATags.Items.SPICES_INGREDIENTS)
                .addTag(TBATags.Items.GLAZES)
                .addTag(TBATags.Items.COOKED_RICE)
                .addTag(TBATags.Items.CHEESE_SLICES)
                .addTag(TBATags.Items.BREAD)
                .addTag(TBATags.Items.EGGS);
        tag(TBATags.Items.CUCUMBER_INGREDIENTS)
                .addTag(TBATags.Items.CUCUMBERS);
        tag(TBATags.Items.SALT_INGREDIENTS)
                .addOptional(TBAItems.PICKLING_SALT.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("salt:salt")));
        tag(TBATags.Items.STARCH_INGREDIENTS)
                .addTag(TBATags.Items.FLOUR)
                .addTag(TBATags.Items.RICE)
                .add(Items.POTATO);
        tag(TBATags.Items.APPLE_INGREDIENTS)
                .addTag(TBATags.Items.STARCH_INGREDIENTS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:jeweled_apple")))
                .addOptional(AetherItems.WHITE_APPLE.getId())
                .add(Items.GOLDEN_APPLE)
                .add(Items.APPLE);
        tag(TBATags.Items.ONION_INGREDIENTS)
                .add(Items.ALLIUM)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:wild_onion")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:onion")));
        tag(TBATags.Items.SWEETENED_CHUNK)
                .add(Items.ROTTEN_FLESH);
        tag(TBATags.Items.CLOVER_INGREDIENTS)
                .addTag(TBATags.Items.CLOVER)
                .addOptional(DelightfulItems.CHOPPED_CLOVER.getId());
        tag(TBATags.Items.SPICES_INGREDIENTS)
                .addTag(TBATags.Items.DILL)
                .addTag(TBATags.Items.CLOVES)
                .addOptional(FestiveDelightModItems.CINNAMON_POWDER.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_STORM_SHARDS.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_SMOKED_EGLIA_BUD.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_SILVER_NEEDLE_WHITE_TEA.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_ROASTED_RED_PINE_NUTS.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_ROASTED_PECANS.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_ICE_PATCHOULI.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_ICE_MINT.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_GOLDEN_CINNAMON_POWDER.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_GLACE_GOJI_BERRIES.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_FROZEN_PERSIMMON.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_DRIED_SELAGINELLA.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_DRIED_EGLIA_BUD.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_CITRINE_NIGELLA_SEEDS.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_BLAZE_PAPRIKA.getId())
                .addOptional(lekavar.lma.drinkbeer.registries.ItemRegistry.SPICE_AMETHYST_NIGELLA_SEEDS.getId());
        tag(TBATags.Items.COCOA)
                .add(Items.COCOA_BEANS);
        tag(TBATags.Items.COCOA_INGREDIENTS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:dried_cocoa_beans")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:roasted_cocoa_beans")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cocoa_powder")))
                .add(Items.COCOA_BEANS);
        tag(TBATags.Items.MELON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cantaloupe")))
                .add(Items.MELON);
        tag(TBATags.Items.COCONUT)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:coconut")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:coconut_slice")));
        tag(TBATags.Items.MELON_INGREDIENTS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cantaloupe_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:cantaloupe")))
                .add(Items.MELON_SLICE)
                .add(Items.MELON);
        tag(TBATags.Items.PUMPKIN_INGREDIENTS)
                .add(Items.PUMPKIN)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:pumpkin_slice")));
        tag(TBATags.Items.CABBAGE_INGREDIENTS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:cabbage")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:cabbage_leaf")));
        tag(TBATags.Items.FOX_FOOD)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:salmonberries")))
                .add(Items.GLOW_BERRIES)
                .addTag(TBATags.Items.WILDBERRIES_EDIBLES)
                .addOptional(AetherItems.BLUE_BERRY.getId());
        tag(TBATags.Items.CLOVER)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:four_leaf_clover")))
                .addOptional(PhantasmModItems.ENDER_CLOVER.getId())
                .addOptional(BOPBlocks.CLOVER.getId())
                .addOptional(BOPBlocks.HUGE_CLOVER_PETAL.getId());
        tag(TBATags.Items.CRANBERRIES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberries")));
        tag(TBATags.Items.RASPBERRIES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberries")));
        tag(TBATags.Items.BLACKBERRIES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberries")));
        tag(TBATags.Items.BLUEBERRIES)
                .addOptional(AetherItems.BLUE_BERRY.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberries")));
        tag(TBATags.Items.SALAD_INGREDIENTS)
                .addTag(TBATags.Items.GREENS)
                .add(Items.DRIED_KELP);
        tag(TBATags.Items.RAW_FISHES)
                .addTag(TBATags.Items.RAW_ELDER_GUARDIAN)
                .addTag(TBATags.Items.RAW_GUARDIAN)
                .addTag(TBATags.Items.RAW_CLAWSTER)
                .addTag(TBATags.Items.RAW_SHRIMP)
                .addTag(TBATags.Items.RAW_CLAM)
                .addTag(TBATags.Items.RAW_CRAB)
                .addTag(TBATags.Items.RAW_SQUID)
                .addTag(TBATags.Items.RAW_GLOW_SQUID);
        tag(TBATags.Items.RAW_ELDER_GUARDIAN)
                .addTag(TBATags.Items.RAW_GUARDIAN)
                .addOptional(ODItems.ELDER_GUARDIAN_SLICE.getId())
                .addOptional(ODItems.ELDER_GUARDIAN_SLAB.getId());
        tag(TBATags.Items.RAW_GUARDIAN)
                .addOptional(ODItems.GUARDIAN_TAIL.getId())
                .addOptional(ODItems.GUARDIAN.getId());
        tag(TBATags.Items.RAW_CLAWSTER)
                .addOptional(RAW_CLAWSTER.getId());
        tag(TBATags.Items.RAW_SHRIMP)
                .addOptional(RAW_SHRIMP.getId());
        tag(TBATags.Items.RAW_CLAM)
                .addOptional(RAW_CLAM_MEAT.getId());
        tag(TBATags.Items.RAW_CRAB)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:crab_claw")))
                .addOptional(RAW_CRAB.getId());
        tag(TBATags.Items.RAW_SQUID)
                .addOptional(ODItems.CUT_TENTACLES.getId())
                .addOptional(ODItems.TENTACLES.getId())
                .addOptional(MDItems.TENTACLES.getId())
                .addOptional(MDItems.SQUID.getId());
        tag(TBATags.Items.RAW_GLOW_SQUID)
                .addOptional(ODItems.CUT_TENTACLES.getId())
                .addOptional(ODItems.TENTACLES.getId())
                .addOptional(MDItems.TENTACLES.getId())
                .addOptional(MDItems.GLOW_SQUID.getId());
        tag(TBATags.Items.RAW_BEEF)
                .add(Items.BEEF)
                .addOptional(MINCED_BEEF.getId());
        tag(TBATags.Items.RAW_MUTTON)
                .add(Items.MUTTON)
                .addOptional(MUTTON_CHOPS.getId());
        tag(TBATags.Items.RAW_GOAT)
                .addOptional(DelightfulItems.RAW_GOAT.getId());
        tag(TBATags.Items.RAW_VENISON)
                .addOptional(DelightfulItems.VENISON_CHOPS.getId());
        tag(TBATags.Items.RAW_RABBIT)
                .add(Items.RABBIT);
        tag(TBATags.Items.RAW_BACON)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:bacon")))
                .addOptional(BACON.getId());
        tag(TBATags.Items.RAW_PORK)
                .addTag(TBATags.Items.RAW_BACON)
                .addOptional(NDItems.HOGLIN_LOIN.getId())
                .addOptional(HAM.getId())
                .add(Items.PORKCHOP);
        tag(TBATags.Items.RAW_MEATS)
                .addTag(TBATags.Items.RAW_GOAT)
                .addTag(TBATags.Items.RAW_VENISON)
                .addTag(TBATags.Items.RAW_RABBIT)
                .addTag(TBATags.Items.RAW_BEEF)
                .addTag(TBATags.Items.RAW_CHICKEN)
                .addTag(TBATags.Items.RAW_MUTTON)
                .addTag(TBATags.Items.RAW_PORK);
        tag(TBATags.Items.GREENS)
                .add(Items.KELP)
                .add(Items.SEAGRASS)
                .addTag(TBATags.Items.CABBAGE)
                .addTag(TBATags.Items.CACTUS)
                .addTag(TBATags.Items.CLOVER);
        tag(TBATags.Items.COFFEE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:coffee_fruit")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersrespite:coffee_berries")));
        tag(TBATags.Items.FR_TEA_LEAVES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:item_tea_leaf")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:item_tea_dried")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersrespite:green_tea_leaves")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersrespite:yellow_tea_leaves")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersrespite:black_tea_leaves")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:green_tea_leaf")));
        tag(TBATags.Items.TEA_LEAVES)
                .addTag(TBATags.Items.FR_TEA_LEAVES);
        tag(TBATags.Items.APPLES)
                .add(Items.APPLE);
        tag(TBATags.Items.VEGETABLES)
                .addTag(TBATags.Items.SPICES_INGREDIENTS)
                .add(TBAItems.CUCUMBER.get())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("hauntedharvest:corn")))
                .addOptional(ItemRegistry.ChorusSucculent.getId())
                .addOptional(ItemRegistry.DriedChorusFlower.getId())
                .addOptional(UnusualendModItems.CHORUS_PETAL.getId())
                .addOptional(UnusualendModItems.WARPED_WART.getId())
                .add(Items.CRIMSON_ROOTS)
                .add(Items.WARPED_ROOTS)
                .add(Items.NETHER_WART)
                .add(Items.SEA_PICKLE)
                .add(Items.CARROT)
                .add(Items.POTATO)
                .add(Items.BEETROOT)
                .addTag(TBATags.Items.SHROOMS)
                .addTag(TBATags.Items.CABBAGE)
                .addTag(TBATags.Items.TOMATO)
                .addTag(TBATags.Items.PUMPKIN)
                .addTag(TBATags.Items.ONION)
                .addTag(TBATags.Items.CACTUS);
        tag(TBATags.Items.ONION)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:wild_onion")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:onion")));
        tag(TBATags.Items.TOMATO)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:tomato")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:tomato")));
        tag(TBATags.Items.RICE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:rice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:rice")));
        tag(TBATags.Items.CARROTS)
                .addOptional(CAVE_CARROT.getId())
                .add(Items.CARROT);
        tag(TBATags.Items.CARROT_INGREDIENTS)
                .add(Items.GOLDEN_CARROT)
                .addTag(TBATags.Items.CARROTS);
        tag(TBATags.Items.SHROOMS)
                .add(Items.RED_MUSHROOM)
                .add(Items.BROWN_MUSHROOM)
                .add(Items.CRIMSON_FUNGUS)
                .add(Items.WARPED_FUNGUS)
                .addOptional(PhantasmModItems.PUTAC_SHROOM.getId())
                .addOptional(UnusualendModItems.CHORUS_FUNGUS.getId())
                .addOptional(NDItems.CRIMSON_FUNGUS_COLONY.getId())
                .addOptional(NDItems.WARPED_FUNGUS_COLONY.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:red_mushroom_colony")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:brown_mushroom_colony")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:glowshroom")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:toadstool")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("unusualend:chorus_fungus")));
        tag(TBATags.Items.WILDBERRIES_EDIBLES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberry_pie_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberry_pie_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberry_pie_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberry_pie_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:glow_berry_pie_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:sweet_berry_pie_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberry_muffin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberry_muffin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberry_muffin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberry_muffin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:glow_berry_muffin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:sweet_berry_muffin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberry_jam_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberry_jam_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberry_jam_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberry_jam_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:glow_berry_jam_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:sweet_berry_jam_sandwich")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:glow_berry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:sweet_berry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberries")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberry")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberry")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberries")));
        tag(TBATags.Items.CROPS)
                .addTag(TBATags.Items.DILL)
                .addTag(TBATags.Items.CUCUMBERS)
                .addTag(TBATags.Items.CLOVES)
                .addTag(TBATags.Items.COCOA)
                .addTag(TBATags.Items.COFFEE)
                .addTag(TBATags.Items.TEA_LEAVES)
                .addTag(TBATags.Items.BERRIES)
                .addTag(TBATags.Items.VEGETABLES)
                .addTag(TBATags.Items.GREENS)
                .addTag(TBATags.Items.FRUITS)
                .addTag(TBATags.Items.ONION)
                .addTag(TBATags.Items.CACTUS)
                .addTag(TBATags.Items.COCONUT)
                .addTag(TBATags.Items.MELON)
                .addTag(TBATags.Items.PUMPKIN)
                .addTag(TBATags.Items.TOMATO)
                .addTag(TBATags.Items.CABBAGE)
                .addTag(TBATags.Items.RICE)
                .addTag(TBATags.Items.SHROOMS);
        tag(TBATags.Items.DILL)
                .add(TBAItems.DILL_HERB.get())
                .add(TBAItems.DILL_SEEDS.get());
        tag(TBATags.Items.CUCUMBERS)
                .add(TBAItems.CUCUMBER.get());
        tag(TBATags.Items.CLOVES)
                .add(TBAItems.CLOVES.get());
        tag(TBATags.Items.PUMPKIN)
                .add(Items.PUMPKIN);
        tag(TBATags.Items.CABBAGE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:cabbage")));
        tag(TBATags.Items.CACTUS)
                .add(Items.CACTUS)
                .addOptional(Objects.requireNonNull(
                        ResourceLocation.tryParse("ecologics:prickly_pear")));
        tag(TBATags.Items.SHELL)
                .add(Items.NAUTILUS_SHELL)
                .addOptional(alabaster.crabbersdelight.common.registry.ModItems.NAUTILUS_SHELL_BLOCK.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:seashell")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:seashell_block")))
                .addOptional(ItemRegistry.DragonEggShell.getId())
                .add(Items.SHULKER_SHELL);
        tag(TBATags.Items.ORB)
                .addOptional(UnusualendModItems.GOLEM_ORB.getId())
                .addOptional(UnusualendModItems.NETHER_ORB.getId())
                .addOptional(UnusualendModItems.WITHER_ORB.getId())
                .addOptional(UnusualendModItems.SHULKER_ORB.getId())
                .addOptional(UnusualendModItems.SHINY_GLOOPSTONE.getId());
        tag(TBATags.Items.STAR)
                .addOptional(PhantasmModItems.STELLIUM_NUGGET.getId())
                .addOptional(PhantasmModItems.STARDUST.getId());
        tag(TBATags.Items.GEMSTONE)
                .addOptional(MoaDecorBathModItems.GEMADBANO.getId())
                .addOptional(MoaDecorArtModItems.GEMADEARTE.getId())
                .addOptional(MoaDecorCookeryModItems.GEMADECOCINA.getId())
                .addOptional(MoaDecorGardenModItems.GEMADEJARDIN.getId())
                .addOptional(MoaDecorScienceModItems.GEMADECIENCIA.getId())
                .addOptional(MoaDecorToysModItems.GEMADEJUGUETES.getId())
                .addOptional(MoaDecorHolidaysModItems.GEMA_FESTIVIDADES.getId());
        tag(TBATags.Items.CRYSTAL)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ichor_slime_crystal")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:earth_slime_crystal")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:sky_slime_crystal")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ender_slime_crystal")))
                .addOptional(PhantasmModItems.CRYSTAL_SPIKE_TIP.getId())
                .addOptional(PhantasmModItems.VOID_CRYSTAL_SPIKE_TIP.getId())
                .addOptional(UnusualendModItems.SHINY_CRYSTAL.getId());
        tag(TBATags.Items.ROSE_QUARTZ)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("create:rose_quartz")))
                .add(BOPItems.ROSE_QUARTZ_SHARD.get());
        tag(TBATags.Items.PEARL)
                .addOptional(alabaster.crabbersdelight.common.registry.ModItems.PEARL.getId());
        tag(TBATags.Items.GEM_SHARDS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ichor_slime_crystal")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:earth_slime_crystal")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:sky_slime_crystal")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:ender_slime_crystal")))
                .add(Items.QUARTZ)
                .add(Items.AMETHYST_SHARD)
                .addOptional(BOPItems.ROSE_QUARTZ_SHARD.getId())
                .addOptional(AetherItems.LIFE_SHARD.getId())
                .addOptional(UnusualendModItems.ANCIENT_SHARD.getId())
                .addOptional(PhantasmModItems.CRYSTAL_SPIKE_TIP.getId())
                .addOptional(PhantasmModItems.VOID_CRYSTAL_SPIKE_TIP.getId())
                .add(Items.ECHO_SHARD);
        tag(TBATags.Items.SHULKER_BOXES)
                .add(Blocks.SHULKER_BOX.asItem())
                .add(Blocks.BLACK_SHULKER_BOX.asItem())
                .add(Blocks.BLUE_SHULKER_BOX.asItem())
                .add(Blocks.BROWN_SHULKER_BOX.asItem())
                .add(Blocks.CYAN_SHULKER_BOX.asItem())
                .add(Blocks.GRAY_SHULKER_BOX.asItem())
                .add(Blocks.GREEN_SHULKER_BOX.asItem())
                .add(Blocks.LIGHT_BLUE_SHULKER_BOX.asItem())
                .add(Blocks.LIGHT_GRAY_SHULKER_BOX.asItem())
                .add(Blocks.LIME_SHULKER_BOX.asItem())
                .add(Blocks.MAGENTA_SHULKER_BOX.asItem())
                .add(Blocks.ORANGE_SHULKER_BOX.asItem())
                .add(Blocks.PINK_SHULKER_BOX.asItem())
                .add(Blocks.PURPLE_SHULKER_BOX.asItem())
                .add(Blocks.RED_SHULKER_BOX.asItem())
                .add(Blocks.WHITE_SHULKER_BOX.asItem())
                .add(Blocks.YELLOW_SHULKER_BOX.asItem());
        tag(TBATags.Items.ENDONIAN_INGOT)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:endonian_ingot")));
        tag(TBATags.Items.MUSIC_DISCS)
                .addOptional(AetherItems.MUSIC_DISC_AETHER_TUNE.getId())
                .addOptional(AetherItems.MUSIC_DISC_HIGH.getId())
                .addOptional(AetherItems.MUSIC_DISC_CHINCHILLA.getId())
                .addOptional(AetherItems.MUSIC_DISC_ASCENDING_DAWN.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:pancake")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("ecologics:music_disc_coconut")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("biomesoplenty:music_disc_wanderer")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("snowyspirit:winter_disc")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("unusualend:music_disc_flying_ships")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("unusualend:music_disc_endstone_golem_theme")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todevillagers:chakra_dream_music_disc")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("decoration_delight:cookin_disc")));
        tag(TBATags.Items.BOOKSHELF_BOOKS)
                .addTag(TBATags.Items.LECTERN_BOOKS);
        tag(TBATags.Items.LECTERN_BOOKS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("corail_recycler:recycling_book")))
                .addOptionalTag(TBATags.Items.FORGE_BOOKS.location())
                .addOptionalTag(TBATags.Items.PATCHOULI_BOOKS.location());
        tag(TBATags.Items.PATCHOULI_BOOKS)
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse("patchouli:guide_book")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("turtleblockacademy:brewingguide")));
        tag(TBATags.Items.TEXTILES)
                .addTag(TBATags.Items.BARK)
                .addTag(TBATags.Items.STRING);
        tag(TBATags.Items.BARK)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:tree_bark")));
        tag(TBATags.Items.STRING)
                .add(Items.STRING);
        tag(TBATags.Items.ASH)
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:ash")));
        tag(TBATags.Items.FATS)
                .add(Items.HONEYCOMB)
                .addOptional(DelightfulItems.ANIMAL_OIL_BOTTLE.getId())
                .addOptional(DelightfulItems.ANIMAL_FAT.getId());
        tag(TBATags.Items.WEBBING)
                .addOptional(BOPBlocks.STRINGY_COBWEB.getId())
                .addOptional(BOPBlocks.WEBBING.getId())
                .addOptional(BOPBlocks.HANGING_COBWEB.getId())
                .addOptional(BOPBlocks.HANGING_COBWEB_STRAND.getId())
                .addOptional(BOPBlocks.GLOWWORM_SILK_STRAND.getId())
                .addOptional(BOPBlocks.GLOWWORM_SILK.getId())
                .addOptional(BOPBlocks.HAIR.getId())
                .add(Items.COBWEB);
        tag(TBATags.Items.CARPETS)
                .add(Items.WHITE_CARPET)
                .add(Items.LIGHT_GRAY_CARPET)
                .add(Items.GRAY_CARPET)
                .add(Items.BLACK_CARPET)
                .add(Items.BROWN_CARPET)
                .add(Items.RED_CARPET)
                .add(Items.ORANGE_CARPET)
                .add(Items.YELLOW_CARPET)
                .add(Items.GREEN_CARPET)
                .add(Items.LIME_CARPET)
                .add(Items.CYAN_CARPET)
                .add(Items.BLUE_CARPET)
                .add(Items.LIGHT_BLUE_CARPET)
                .add(Items.PINK_CARPET)
                .add(Items.MAGENTA_CARPET)
                .add(Items.PURPLE_CARPET);
        tag(TBATags.Items.NUGGETS)
                .addTag(TBATags.Items.IRON_NUGGET)
                .addTag(TBATags.Items.GOLD_NUGGET)
                .addTag(TBATags.Items.NETHERITE_NUGGET);
        tag(TBATags.Items.NETHERITE_NUGGET)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:netherite_nugget")));
        tag(TBATags.Items.INGOTS)
                .addTag(TBATags.Items.COPPER_INGOT)
                .addTag(TBATags.Items.IRON_INGOT)
                .addTag(TBATags.Items.NETHERITE_INGOT)
                .addTag(TBATags.Items.ENDONIAN_INGOT);
        tag(TBATags.Items.GOLD_NUGGET)
                .add(Items.GOLD_NUGGET);
        tag(TBATags.Items.IRON_NUGGET)
                .add(Items.IRON_NUGGET);
        tag(TBATags.Items.IRON_INGOT)
                .add(Items.IRON_INGOT);
        tag(TBATags.Items.COPPER_INGOT)
                .add(Items.COPPER_INGOT);
        tag(TBATags.Items.NETHERITE_INGOT)
                .add(Items.NETHERITE_INGOT);
        tag(TBATags.Items.BACKPACKS)
                .addOptional(net.p3pp3rf1y.sophisticatedbackpacks.init.ModItems.NETHERITE_BACKPACK.getId())
                .addOptional(net.p3pp3rf1y.sophisticatedbackpacks.init.ModItems.DIAMOND_BACKPACK.getId())
                .addOptional(net.p3pp3rf1y.sophisticatedbackpacks.init.ModItems.GOLD_BACKPACK.getId())
                .addOptional(net.p3pp3rf1y.sophisticatedbackpacks.init.ModItems.IRON_BACKPACK.getId())
                .addOptional(net.p3pp3rf1y.sophisticatedbackpacks.init.ModItems.BACKPACK.getId());
        tag(TBATags.Items.TOOLS_CARVING)
                .addTag(ForgeTags.TOOLS_KNIVES);
        tag(TBATags.Items.TOOLS_KNIVES);
        tag(TBATags.Items.GEMS)
                .add(Items.REDSTONE)
                .add(Items.GLOWSTONE)
                .add(Items.PRISMARINE_SHARD)
                .add(Items.PRISMARINE_CRYSTALS)
                .add(Items.LAPIS_LAZULI)
                .add(Items.EMERALD)
                .add(Items.DIAMOND)
                .addTag(TBATags.Items.PEARL)
                .addTag(TBATags.Items.CRYSTAL)
                .addTag(TBATags.Items.GEMSTONE)
                .addTag(TBATags.Items.GEM_SHARDS)
                .addTag(TBATags.Items.SOUL_BINDER);
        tag(TBATags.Items.SOUL_BINDER)
                .addOptional(AetherItems.LIFE_SHARD.getId())
                .addOptional(UnusualendModItems.ANCIENT_SHARD.getId())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("cagerium:binding_gemstone")))
                .add(Items.ECHO_SHARD);
        tag(TBATags.Items.BELT)
                .addOptionalTag(TBATags.Items.LANTERNS.location())
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:quiver")));
        tag(TBATags.Items.HANDS)
                .addOptionalTag(TBATags.Items.LANTERNS.location())
                .add(Items.SOUL_TORCH)
                .add(Items.TORCH)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:key")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("map_atlases:atlas")));
        tag(TBATags.Items.CURIO_LIGHT_SOURCE)
                .add(Items.SOUL_TORCH)
                .add(Items.TORCH)
                .addOptionalTag(TBATags.Items.LANTERNS.location());
        tag(TBATags.Items.LANTERNS)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:striped_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:covered_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:chain_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:tavern_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:cross_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("mcwlights:bell_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:copper_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:crimson_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:brass_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:silver_lantern")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:lead_lantern")))
                .add(Items.SOUL_LANTERN)
                .add(Items.LANTERN);
        tag(TBATags.Items.GLASS)
                .addOptional(UnusualendModItems.CHISELED_GLASS.getId())
                .addOptional(PhantasmModItems.CRYSTAL_FRAMED_GLASS.getId())
                .addOptional(PhantasmModItems.VOID_CRYSTAL_FRAMED_GLASS.getId());
        tag(TBATags.Items.GLASS_INFUSED)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todeville:redstone_infused_glass")));
        tag(TBATags.Items.GLASS_REINFORCED)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todeville:reinforced_glass")));
        tag(TBATags.Items.GLASS_GLOWING)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todeville:glowing_glass")));
        tag(TBATags.Items.GLASS_SHIFTING)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todeville:shifting_glass")));
        tag(TBATags.Items.LOOTBAG_SPECIAL_CURRENCY)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:netherite_coin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:emerald_quarter_bank_note")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:emerald_half_bank_note")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:emerald_bank_note")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:lucky_coin")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:server_token_coin")));
        tag(TBATags.Items.LOOTBAG_CURRENCY)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:copper_coin_bag")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:iron_coin_bag")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:gold_coin_bag")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:nether_gold_coin_bag")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("todecoins:endonian_coin_bag")));
        tag(TBATags.Items.CURRENCY);
        tag(TBATags.Items.JAR_PLACEABLE)
                .addTag(TBATags.Items.CURRENCY);
        tag(TBATags.Items.COOKIES)
                .addTag(TBATags.Items.JAR_PLACEABLE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:chocolate_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:sweet_berry_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:honey_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:golden_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:cookie_of_unbinding")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:sweet_berry_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:honey_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:green_tea_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("snowyspirit:gingerbread_cookie")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_man")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_cookie_star")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_cookie_creeper")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:gingerbread_cookie_block")));
        tag(TBATags.Items.CHOCOLATE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:dark_chocolate_bar")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:milk_chocolate_bar")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("kawaiidishes:white_chocolate_bar")))
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:chocolate_bars")));
        tag(TBATags.Items.CANDY)
                .addTag(TBATags.Items.CHOCOLATE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("snowyspirit:candy_cane")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("supplementaries:candy")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("festive_delight:sugar_cane")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:rock_candy")));
        tag(TBATags.Items.SWEETS)
                .addTag(TBATags.Items.FRUITS)
                .addTag(TBATags.Items.CANDY);
        tag(TBATags.Items.BACKPACK_UPGRADES)
                .addOptional(PICKUP_UPGRADE.getId())
                .addOptional(ADVANCED_PICKUP_UPGRADE.getId())
                .addOptional(FILTER_UPGRADE.getId())
                .addOptional(ADVANCED_FILTER_UPGRADE.getId())
                .addOptional(MAGNET_UPGRADE.getId())
                .addOptional(ADVANCED_MAGNET_UPGRADE.getId())
                .addOptional(FEEDING_UPGRADE.getId())
                .addOptional(ADVANCED_FEEDING_UPGRADE.getId())
                .addOptional(COMPACTING_UPGRADE.getId())
                .addOptional(ADVANCED_COMPACTING_UPGRADE.getId())
                .addOptional(VOID_UPGRADE.getId())
                .addOptional(ADVANCED_VOID_UPGRADE.getId())
                .addOptional(RESTOCK_UPGRADE.getId())
                .addOptional(ADVANCED_RESTOCK_UPGRADE.getId())
                .addOptional(DEPOSIT_UPGRADE.getId())
                .addOptional(ADVANCED_DEPOSIT_UPGRADE.getId())
                .addOptional(REFILL_UPGRADE.getId())
                .addOptional(ADVANCED_REFILL_UPGRADE.getId())
                .addOptional(INCEPTION_UPGRADE.getId())
                .addOptional(EVERLASTING_UPGRADE.getId())
                .addOptional(SMELTING_UPGRADE.getId())
                .addOptional(AUTO_SMELTING_UPGRADE.getId())
                .addOptional(SMOKING_UPGRADE.getId())
                .addOptional(AUTO_SMOKING_UPGRADE.getId())
                .addOptional(BLASTING_UPGRADE.getId())
                .addOptional(AUTO_BLASTING_UPGRADE.getId())
                .addOptional(CRAFTING_UPGRADE.getId())
                .addOptional(STONECUTTER_UPGRADE.getId())
                .addOptional(STACK_UPGRADE_TIER_1.getId())
                .addOptional(STACK_UPGRADE_TIER_2.getId())
                .addOptional(STACK_UPGRADE_TIER_3.getId())
                .addOptional(STACK_UPGRADE_TIER_4.getId())
                .addOptional(JUKEBOX_UPGRADE.getId())
                .addOptional(TOOL_SWAPPER_UPGRADE.getId())
                .addOptional(ADVANCED_TOOL_SWAPPER_UPGRADE.getId())
                .addOptional(TANK_UPGRADE.getId())
                .addOptional(BATTERY_UPGRADE.getId())
                .addOptional(PUMP_UPGRADE.getId())
                .addOptional(ADVANCED_PUMP_UPGRADE.getId())
                .addOptional(XP_PUMP_UPGRADE.getId())
                .addOptional(ANVIL_UPGRADE.getId());
        tag(TBATags.Items.DOOR_PATTERNS)
                .addOptional(ItemInit.PRINT_WAFFLE.getId())
                .addOptional(ItemInit.PRINT_SWAMP.getId())
                .addOptional(ItemInit.PRINT_SPRUCE.getId())
                .addOptional(ItemInit.PRINT_OAK.getId())
                .addOptional(ItemInit.PRINT_NETHER.getId())
                .addOptional(ItemInit.PRINT_DARK_OAK.getId())
                .addOptional(ItemInit.PRINT_MYSTIC.getId())
                .addOptional(ItemInit.PRINT_JUNGLE.getId())
                .addOptional(ItemInit.PRINT_BIRCH.getId())
                .addOptional(ItemInit.PRINT_BAMBOO.getId())
                .addOptional(ItemInit.PRINT_ACACIA.getId());
        tag(TBATags.Items.TRAPDOOR_PATTERNS)
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_TROPICAL.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_PAPER.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_FOUR_PANEL.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_COTTAGE.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_CLASSIC.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_BLOSSOM.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_BEACH.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_BARRED.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_SWAMP.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_MYSTIC.getId())
                .addOptional(com.mcwtrpdoors.kikoz.init.ItemInit.PRINT_BAMBOO.getId());
        tag(TBATags.Items.RAW_CHICKEN)
                .add(Items.CHICKEN)
                .addOptional(ModItems.CHICKEN_CUTS.getId());
        tag(TBATags.Items.COOKED_MEATS)
                .addTag(TBATags.Items.COOKED_CHICKEN)
                .addTag(TBATags.Items.COOKED_MUTTON);
        tag(TBATags.Items.COOKED_CHICKEN)
                .add(Items.COOKED_CHICKEN)
                .addOptional(ModItems.COOKED_CHICKEN_CUTS.getId());
        tag(TBATags.Items.COOKED_MUTTON)
                .add(Items.COOKED_MUTTON)
                .addOptional(ModItems.COOKED_MUTTON_CHOPS.getId());
        tag(TBATags.Items.BREAD)
                .add(Items.BREAD)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("eggdelight:bread_slice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:steamed_bread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:steamed_bread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:steamed_bread_cocoa")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:apricotjerry_bread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("hauntedharvest:cornbread")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersrespite:nether_wart_sourdough")));
        tag(TBATags.Items.ALCOHOL)
                .add(TBAItems.BEET_WINE.get())
                .addOptionalTag(Objects.requireNonNull(ResourceLocation.tryParse("drinkbeer:beer")));
        tag(TBATags.Items.GLAZES)
                .add(Items.HONEY_BOTTLE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:cranberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blackberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:raspberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:blueberry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:glow_berry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("wildberries:sweet_berry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:bottle_soysause")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("endsdelight:ender_sauce")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("extradelight:sweet_berry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("extradelight:golden_apple_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("extradelight:glow_berry_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("extradelight:carrot_jam")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:glow_jelly_bottle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:jelly_bottle")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("handcrafted:berry_jam_jar")));
        tag(TBATags.Items.EGGS)
                .addOptional(ItemRegistry.NonHatchableDragonEgg.getId())
                .add(Items.EGG)
                .add(Items.TURTLE_EGG);
        tag(TBATags.Items.CHEESE_SLICES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tconstruct:cheese")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:soy_cheese")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("fastfooddelight:cheese")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:cheese_slice")));
        tag(TBATags.Items.FRUITS)
                .addOptional(NDItems.PROPELPEARL.getId())
                .addTag(TBATags.Items.BERRIES)
                .addTag(TBATags.Items.COCOA)
                .addTag(TBATags.Items.COCONUT)
                .addTag(TBATags.Items.MELON)
                .addTag(TBATags.Items.PUMPKIN)
                .addTag(TBATags.Items.COFFEE)
                .addTag(TBATags.Items.APPLES);
        tag(TBATags.Items.APPLES)
                .add(Items.APPLE);
        tag(TBATags.Items.BERRIES)
                .addTag(TBATags.Items.CRANBERRIES)
                .addTag(TBATags.Items.RASPBERRIES)
                .addTag(TBATags.Items.BLACKBERRIES)
                .addTag(TBATags.Items.BLUEBERRIES)
                .add(Items.CHORUS_FRUIT)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("phantasm:oblifruit")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("phantasm:pream_berry")))
                .add(Items.SWEET_BERRIES)
                .add(Items.GLOW_BERRIES)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("delightful:salmonberries")));
        tag(TBATags.Items.COOKED_RICE)
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:onigiri")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("tofucraft:onigiri_salt")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("farmersdelight:cooked_rice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:cooked_rice")))
                .addOptional(Objects.requireNonNull(ResourceLocation.tryParse("xercamod:omurice")));
        tag(TBATags.Items.NO_AI_EGGS)
                .addOptional(TBAItems.TREASURE_BEETLE_SPAWN_EGG.getId())
                .addOptional(AetherItems.AECHOR_PLANT_SPAWN_EGG.getId())
                .addOptional(AetherItems.COCKATRICE_SPAWN_EGG.getId())
                .addOptional(AetherItems.FIRE_MINION_SPAWN_EGG.getId())
                .addOptional(AetherItems.SENTRY_SPAWN_EGG.getId())
                .addOptional(AetherItems.BLUE_SWET_SPAWN_EGG.getId())
                .addOptional(AetherItems.GOLDEN_SWET_SPAWN_EGG.getId())
                .addOptional(AetherItems.WHIRLWIND_SPAWN_EGG.getId())
                .addOptional(AetherItems.EVIL_WHIRLWIND_SPAWN_EGG.getId())
                .addOptional(AetherItems.VALKYRIE_SPAWN_EGG.getId())
                .addOptional(AetherItems.VALKYRIE_QUEEN_SPAWN_EGG.getId())
                .addOptional(AetherItems.SLIDER_SPAWN_EGG.getId())
                .addOptional(AetherItems.SUN_SPIRIT_SPAWN_EGG.getId())
                .addOptional(AetherItems.ZEPHYR_SPAWN_EGG.getId())
                .addOptional(UnusualendModItems.DRAGLING_SPAWN_EGG.getId())
                .addOptional(UnusualendModItems.ENDSTONE_GOLEM_SPAWN_EGG.getId())
                .addOptional(UnusualendModItems.ENDER_BLOB_SPAWN_EGG.getId())
                .addOptional(UnusualendModItems.UNDEAD_ENDERLING_SPAWN_EGG.getId())
                .addOptional(UnusualendModItems.ENDSTONE_TRAPPER_SPAWN_EGG.getId());
    }
}