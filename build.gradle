//file:noinspection GroovyAssignabilityCheck
//file:noinspection GrUnresolvedAccess
//file:noinspection GroovyAccessibility
plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT' apply true
}

mixin {
    add sourceSets.main, "mixins.turtleblockacademy.refmap.json"
    config "mixins.turtleblockacademy.json"
    showMessageTypes = true
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // generateRunFolders = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', mod_id
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenCentral()
    maven {
        url = "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // addresses vulnerabilities with imported external libraries
    implementation 'io.netty:netty-codec:4.1.104.Final'
    implementation 'io.netty:netty-handler:4.1.104.Final'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.commons:commons-compress:1.26.1'

    // gamestages set
    implementation fg.deobf("curse.maven:bookshelf-228525:4556697")
    implementation fg.deobf("curse.maven:game-stages-268655:5171200")

    // serene seasons
    implementation fg.deobf("curse.maven:serene-seasons-291874:4037228")

    // curios
    implementation fg.deobf("curse.maven:curios-309927:5066842")

    // artifacts
    implementation fg.deobf("curse.maven:artifacts-312353:5102238")

    // loot bags
    implementation fg.deobf("curse.maven:resourceful-lib-570073:4477753")
    implementation fg.deobf("curse.maven:resourceful-lootbags-687082:4112026")

    // storage and backpacks
    implementation fg.deobf("curse.maven:sophisticated-backpacks-422301:5194759")
    implementation fg.deobf("curse.maven:sophisticated-core-618298:5194752")
    implementation fg.deobf("curse.maven:refined-storage-243076:4861827")

    // biomes and dimensions mods set
    implementation fg.deobf("curse.maven:dimensional-dungeons-352222:4750034")
    implementation fg.deobf("curse.maven:terrablender-563928:4618490")
    implementation fg.deobf("curse.maven:biomes-o-plenty-220318:4473556")
    implementation fg.deobf("curse.maven:ecologics-570463:4171285")
    implementation fg.deobf("curse.maven:unusual-end-617757:4549776")
    implementation fg.deobf("curse.maven:phantasm-565254:4398465")
    implementation fg.deobf("curse.maven:aether-255308:5263399")

    // delight and food mod set
    implementation fg.deobf("curse.maven:farmers-delight-398521:4679318")
    implementation fg.deobf("curse.maven:farmers-respite-551453:4081312")
    implementation fg.deobf("curse.maven:festive-delight-711672:4954520")
    implementation fg.deobf("curse.maven:fastfood-delight-714075:4121540")
    implementation fg.deobf("curse.maven:chefs-delight-forge-832983:4517363")
    implementation fg.deobf("curse.maven:oceans-delight-841262:4652058")
    implementation fg.deobf("curse.maven:ends-delight-662675:4675407")
    implementation fg.deobf("curse.maven:nethers-delight-496394:3971576")
    implementation fg.deobf("curse.maven:crabbers-delight-892827:4762750")
    implementation fg.deobf("curse.maven:decoration-delight-687475:4689700")
    implementation fg.deobf("curse.maven:crate-delight-forge-958291:5183632")
    implementation fg.deobf("curse.maven:storage-delight-forge-979761:5211383")
    implementation fg.deobf("curse.maven:miners-delight-plus-689630:4738272")

    // need this one on for runData
    implementation fg.deobf("curse.maven:delightful-637529:4541459")
    // need this one on for runClient
    compileOnly(fg.deobf("curse.maven:delightful-637529:4541459"))

    implementation fg.deobf('software.bernie.geckolib:geckolib-forge-1.19:3.1.40')
    implementation fg.deobf("curse.maven:kawaii-dishes-694309:4644365")
    implementation fg.deobf("curse.maven:drink-beer-refill-729120:4572768")
    implementation fg.deobf("curse.maven:salt-832006:4988711")

    // moonlight lib mod set
    implementation fg.deobf("curse.maven:selene-499980:4758015")
    implementation fg.deobf("curse.maven:supplementaries-412082:4713347")
    implementation fg.deobf("curse.maven:haunted-harvest-541753:4567840")
    implementation fg.deobf("curse.maven:snowy-spirit-566142:4479536")

    // decor
    implementation fg.deobf("curse.maven:moa-decor-toys-701524:4516288")
    implementation fg.deobf("curse.maven:moa-decor-bath-853639:4516296")
    implementation fg.deobf("curse.maven:moa-decor-holidays-920001:4784140")
    implementation fg.deobf("curse.maven:moa-decor-art-701473:4516278")
    implementation fg.deobf("curse.maven:moa-decor-cookery-701502:4516273")
    implementation fg.deobf("curse.maven:moa-decor-garden-908847:4733291")
    implementation fg.deobf("curse.maven:moa-decor-science-701517:4516285")
    implementation fg.deobf("curse.maven:plushie-mod-544197:4095395")
    implementation fg.deobf("curse.maven:macaws-lights-and-lamps-502372:4618179")
    implementation fg.deobf("curse.maven:macaws-paths-and-pavings-629153:4585116")
    implementation fg.deobf("curse.maven:additional-lights-384991:4410874")
    implementation fg.deobf("curse.maven:just-outdoor-stuffs-896219:4691715")
    implementation fg.deobf("curse.maven:chimes-350464:4671793")
    implementation fg.deobf("curse.maven:macaws-doors-378646:4649906")
    implementation fg.deobf("curse.maven:macaws-trapdoors-400933:4608580")

    // additional mobs and villagers
    implementation fg.deobf("curse.maven:friends-and-foes-forge-602059:5184433")
    implementation fg.deobf("curse.maven:beautify-decorate-633252:4036351")
    implementation fg.deobf("curse.maven:villagersplus-forge-817272:4370425")

    // tinker mod set
    implementation fg.deobf("curse.maven:mantle-74924:5339977")
    implementation fg.deobf("curse.maven:tinkers-construct-74072:5340027")

    runtimeOnly(fg.deobf("curse.maven:create-328085:4835190"))

    // patchouli
    implementation fg.deobf("curse.maven:patchouli-306770:4031402")

    // mixin extras
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.6"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.6")) {
        jarJar.ranged(it, "[0.3.6,)")
    }
    // sponge mixin
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "mixins.turtleblockacademy.json"
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
